# Autogenerated param section. Do not hand edit.
param {
group.0 {
name=Dynamically Reconfigurable Parameters
desc=See the [[dynamic_reconfigure]] package for details on dynamically reconfigurable parameters.
0.name= ~m1_pos_p
0.default= 101.3418
0.type= double
0.desc=M1 P Gain Range: -std::numeric_limits<double>::infinity() to std::numeric_limits<double>::infinity()
1.name= ~m1_pos_i
1.default= 1.44922
1.type= double
1.desc=M1 I Gain Range: -std::numeric_limits<double>::infinity() to std::numeric_limits<double>::infinity()
2.name= ~m1_pos_d
2.default= 434.91602
2.type= double
2.desc=M1 D Gain Range: -std::numeric_limits<double>::infinity() to std::numeric_limits<double>::infinity()
3.name= ~m1_max_i
3.default= 2465.0
3.type= double
3.desc=M1 Max I Range: -std::numeric_limits<double>::infinity() to std::numeric_limits<double>::infinity()
4.name= ~m2_pos_p
4.default= 104.99219
4.type= double
4.desc=M1 P Gain Range: -std::numeric_limits<double>::infinity() to std::numeric_limits<double>::infinity()
5.name= ~m2_pos_i
5.default= 1.44336
5.type= double
5.desc=M1 I Gain Range: -std::numeric_limits<double>::infinity() to std::numeric_limits<double>::infinity()
6.name= ~m2_pos_d
6.default= 433.04004
6.type= double
6.desc=M1 D Gain Range: -std::numeric_limits<double>::infinity() to std::numeric_limits<double>::infinity()
7.name= ~m2_max_i
7.default= 2341.0
7.type= double
7.desc=M1 Max I Range: -std::numeric_limits<double>::infinity() to std::numeric_limits<double>::infinity()
8.name= ~deadzone
8.default= 5
8.type= int
8.desc=Deadzone for Pos Range: -2147483648 to 2147483647
9.name= ~angular_gain
9.default= 1.8
9.type= double
9.desc=angular velocity gain Range: -std::numeric_limits<double>::infinity() to std::numeric_limits<double>::infinity()
10.name= ~base_width
10.default= 0.15
10.type= double
10.desc=width between wheels Range: -std::numeric_limits<double>::infinity() to std::numeric_limits<double>::infinity()
11.name= ~ticks_per_meter
11.default= 651000
11.type= int
11.desc=Encoder Ticks per meter Range: -2147483648 to 2147483647
12.name= ~m1_vel_p
12.default= 0.0
12.type= double
12.desc=M1 Max I Range: -std::numeric_limits<double>::infinity() to std::numeric_limits<double>::infinity()
13.name= ~m1_vel_i
13.default= 0.0
13.type= double
13.desc=M1 Max I Range: -std::numeric_limits<double>::infinity() to std::numeric_limits<double>::infinity()
14.name= ~m1_vel_d
14.default= 0.0
14.type= double
14.desc=M1 Max I Range: -std::numeric_limits<double>::infinity() to std::numeric_limits<double>::infinity()
15.name= ~m1_vel_qpps
15.default= 4000000.0
15.type= double
15.desc=inverse speed adjustment Range: -std::numeric_limits<double>::infinity() to std::numeric_limits<double>::infinity()
16.name= ~m2_vel_p
16.default= 0.0
16.type= double
16.desc=M1 Max I Range: -std::numeric_limits<double>::infinity() to std::numeric_limits<double>::infinity()
17.name= ~m2_vel_i
17.default= 0.0
17.type= double
17.desc=M1 Max I Range: -std::numeric_limits<double>::infinity() to std::numeric_limits<double>::infinity()
18.name= ~m2_vel_d
18.default= 0.0
18.type= double
18.desc=M1 Max I Range: -std::numeric_limits<double>::infinity() to std::numeric_limits<double>::infinity()
19.name= ~m2_vel_qpps
19.default= 4000000.0
19.type= double
19.desc=inverse speed adjustment Range: -std::numeric_limits<double>::infinity() to std::numeric_limits<double>::infinity()
}
}
# End of autogenerated section. You may edit below.
